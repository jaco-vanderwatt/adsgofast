name: Build Source Artifacts

on: 
  push:
    branches:
      - development/0.1

env:
  AZURE_WEBAPP_NAME: my-app-name    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '3.1.x'           # set this to the dot net version to use

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
    - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    - name: Check out repository code
      uses: actions/checkout@v2
    - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
    - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
    - name: List files in the repository
      run: |
        ls ${{ github.workspace }}
    - run: echo "üçè This job's status is ${{ job.status }}."
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Restore dependencies
      run: dotnet restore 
      working-directory: ./solution/FunctionApp
    - name: Publish functions
      run: dotnet publish --no-restore --configuration Release --output './deploy'
      working-directory: ./solution/FunctionApp
    - run: echo "starting Zip"
    - name: zip functions
      run: zip -r ../publish.zip * 
      working-directory: ./solution/FunctionApp/deploy
    - name: Package functions
      uses: actions/upload-artifact@v2.2.3
      with:
          name: azurefunctions
          path: ./solution/FunctionApp/publish.zip
    
